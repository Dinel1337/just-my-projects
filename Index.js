@router.message(F.content_type == "web_app_data")
async def handle_webapp_data(message: Message):
    try:
        print("–ü–æ–ª—É—á–µ–Ω—ã WebApp –¥–∞–Ω–Ω—ã–µ:", message.web_app_data)  # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        
        data = json.loads(message.web_app_data.data)
        print("–†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data)  # –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        
        if data.get("action") == "phone_shared":
            phone = data["phone_number"]
            await message.answer(f"üì± –ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ WebApp: {phone}")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            
        elif data.get("status") == "success":
            await message.answer("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
            
    except json.JSONDecodeError:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
        print("–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON")
    except KeyError as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á {e}")
        print("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á –≤ –¥–∞–Ω–Ω—ã—Ö:", e)
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        print("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebApp –¥–∞–Ω–Ω—ã—Ö:", e)
