import asyncio
from aiogram.types import (
Message,
FSInputFile, 
InputMediaPhoto,
CallbackQuery,
ChatMember
)
from aiogram.filters import CommandStart, Command
from aiogram import Router, F, Bot
from .keyboard_bot import robux_inline_keyboard, check_keyboard, reborn, true, MyProfile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
router = Router()
CHANNEL_ID = -1002043185815

class Form(StatesGroup):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π
        –ù—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ
        –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    """
    waiting_for_nickname = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∏–∫–∞


async def is_subscribed(bot: Bot, user_id: int, channel_id: int) -> bool:
    try:
        member = await bot.get_chat_member(chat_id=channel_id, user_id=user_id)
        return member.status in ['member', 'administrator', 'creator']
    except Exception:
        return False


@router.message(CommandStart())
async def start_message(message: Message) -> Message:
    
    send = await message.answer('–ù–∞—á–∏—Å–ª—è–µ–º —Ä–æ–±—É–∫—Å—ã –Ω–∞ –±–∞–ª–∞–Ω—Å...\n„Ö§\nüü©‚¨úÔ∏è‚¨úÔ∏è') # –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±

    await asyncio.sleep(1)
    await message.bot.edit_message_text('–ù–∞—á–∏—Å–ª—è–µ–º —Ä–æ–±—É–∫—Å—ã –Ω–∞ –±–∞–ª–∞–Ω—Å...\n„Ö§\nüü©üü©‚¨úÔ∏è', chat_id=message.chat.id, message_id=send.message_id)

    await asyncio.sleep(1)
    await message.bot.edit_message_text('–ù–∞—á–∏—Å–ª—è–µ–º —Ä–æ–±—É–∫—Å—ã –Ω–∞ –±–∞–ª–∞–Ω—Å...\n„Ö§\nüü©üü©üü©', chat_id=message.chat.id, message_id=send.message_id)
    
    photo = FSInputFile("image/roblox.jpg")
    
    await asyncio.sleep(0.5)
    await message.bot.edit_message_media(
        chat_id=message.chat.id,
        message_id=send.message_id,
        media=InputMediaPhoto(
            media=photo,
            caption='‚úÖ–í–∞—à –±–∞–ª–∞–Ω—Å: 25.000 —Ä–æ–±—É–∫—Å–æ–≤\n„Ö§\n–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –≤ Roblox?'
        ),
    )
    await message.bot.edit_message_reply_markup(
        chat_id=message.chat.id,
        message_id=send.message_id,
        reply_markup=robux_inline_keyboard
    )
    
@router.callback_query(F.data == "get_robux")
async def process_buttons(callback: CallbackQuery):
    await callback.message.delete()
    
    photo = FSInputFile("image/roblox_check.jpg")
    await callback.message.answer_photo(
        photo=photo,
        caption='‚úÖ–í–∞—à –±–∞–ª–∞–Ω—Å: 25.000 —Ä–æ–±—É–∫—Å–æ–≤\n„Ö§\n–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –≤ Roblox?',
        reply_markup=check_keyboard
    )
    await callback.answer()
    
@router.callback_query(lambda c: c.data in ['check', 'NAME_FALSE'])
async def channel(callback: CallbackQuery, bot: Bot, state: FSMContext):
    if await is_subscribed(bot, callback.from_user.id, CHANNEL_ID):
        await callback.message.delete()
        
        photo = FSInputFile("image/accept.jpg")
        await callback.message.answer_photo(
            photo=photo,
            caption='‚úâÔ∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–∏–∫ –≤ Roblox, —á—Ç–æ–±—ã —è —Å–º–æ–≥–ª–∞ –Ω–∞—á–∏—Å–ª–∏—Ç—å –≤–∞–º —Ä–æ–±—É–∫—Å—ã'
        )
        
        await state.set_state(Form.waiting_for_nickname)
        
    else:
        await callback.message.delete()
        await callback.message.answer('–†–æ–±–∞–∫—Å—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ‚ùå\n„Ö§\n–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', reply_markup=reborn)
    await callback.answer()
    
@router.message(Form.waiting_for_nickname)
async def nickname(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–∏–∫üëå\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ-–ª–∏ –≤—ã –µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª–∏.', reply_markup=true)
    await state.clear()

@router.callback_query(F.data == 'NAME_TRUE')
async def profile(callback: CallbackQuery):
    await callback.message.delete()
    mes = ['‚¨úÔ∏è', '‚¨úÔ∏è', '‚¨úÔ∏è', '‚¨úÔ∏è', '‚¨úÔ∏è']
    n = '‚úÖÔ∏è'
    send = await callback.message.answer(f'–°–æ–∑–¥–∞—ë–º –∑–∞—è–≤–∫—É..\n„Ö§\n{"".join(mes)}') # –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±
    for i in range(0, 5):
        mes[i] = n
        await asyncio.sleep(0.5)
        await callback.message.bot.edit_message_text(f'–ù–∞—á–∏—Å–ª—è–µ–º —Ä–æ–±—É–∫—Å—ã –Ω–∞ –±–∞–ª–∞–Ω—Å...\n„Ö§\n{"".join(mes)}', chat_id=callback.message.chat.id, message_id=send.message_id)

    photo = FSInputFile("image/profiel.jpg")
    await callback.message.answer_photo(
        photo=photo,
        caption='‚ù§Ô∏è–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –º—ã –Ω–∞–ø–∏—à–µ–º –≤–∞–º –∫–æ–≥–¥–∞ —Ä–æ–±—É–∫—Å—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã\n„Ö§\n –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –≤–∞—à–∏–º –º–µ–Ω—é, –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —ç—Ç–∏—Ö –∫–Ω–æ–ø–∫–∞—Öüëá',
        reply_markup=MyProfile  
    )
    await callback.answer()
    
@router.callback_query(F.data == "RULES")
async def rules(callback: CallbackQuery):
    await callback.answer("1.–ù–µ –æ—Ç–ø–∏—Å—ã–≤–∞—Ç—å—Å—è\n–ß—Ç–æ –±—ã —É—Å–∫–æ—Ä–∏—Ç—å –≤—ã–≤–æ–¥ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –£—Å–∫–æ—Ä–∏—Ç—å –≤—ã–≤–æ–¥", show_alert=True)
    await callback.answer()